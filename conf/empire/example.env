# azcount is the # of AvailabilityZones to attempt to build in. You
# should build in as many as you can afford in order to provide for
# better fault tolerance. Note: Since this is all done in a VPC, you
# need to find out how many AZs can handle VPC subnets for the
# region you are building in. As of this writing, here are the max
# allowed azcount's for each zone:
#     us-east-1: 4, us-west-1: 2, us-west-2: 3, eu-west-1: 3
# Note: The minimum allowed azcount is 2.
azcount: 2

# namespace is a unique name that the stacks will be built under. This value
# will be used to prefix the CloudFormation stack names as well as the s3
# bucket that contains revisions of the stacker templates. This is the only
# required environment variable.
namespace:

# An external domain where empire.<domain> CNAME will be created
external_domain:
ssh_key_name:
# Only clients from this IP will be able to talk to the Empire Controller
# and ssh to the bastion hosts
trusted_network_cidr:

nat_instance_type: m3.medium

bastion_instance_type: m3.medium

# Used by the controller and the ECS Agent on the minions to pull
# down private images from the registry
docker_registry: https://index.docker.io/v1/
docker_registry_user:
docker_registry_password:
docker_registry_email:

# Disk size for RDS instance in GB
empiredb_disk_size: 10
empiredb_instance_type: db.m3.large

# This username & password will be created automatically on the empire
# database, and will be shared with Empire
empiredb_user:
empiredb_password:

# Change to anything non-blank to disable streaming logs (enabled by default)
empire_disable_streaming_logs: !!str

empire_minion_min_instance_count: 3
empire_minion_max_instance_count: 10
empire_minion_instance_type: c4.xlarge

empire_environment: example

empire_controller_min_instance_count: 2
empire_controller_max_instance_count: 2
empire_controller_instance_type: m3.medium

# If you change this, it may require blueprint changes as well to deal
# with changes to Environment variables the empire daemon expects/uses
empire_daemon_docker_image: remind101/empire:0.11.0

# This cert needs to be uploaded into AWS ahead of time, and will be used for
# the ELB in front of the Empire API.  Use "acm" for AWS Certificate Manager
# certs, and "iam" or blank for certs uploaded to IAM.
empire_daemon_cert_type: !!str
empire_daemon_cert_name: !!str

# This is used for github authentication - you need to setup a new Oauth
# application in Github in your github organization
# https://github.com/organizations/:organization/settings/applications
# See: http://empire.readthedocs.org/en/latest/configuration/#github-authentication
empire_daemon_github_client_id:
empire_daemon_github_client_secret:
empire_daemon_github_organization:

# This is used for github deployment webhooks. See:
# http://empire.readthedocs.org/en/latest/configuration/#github-deployments
# Disabled by default (!!str is a blank string)
empire_daemon_github_webhooks_secret: !!str
empire_daemon_github_deployments_environment: !!str

# Just a random string used to sign access tokens for clients in Empire
# should be somewhere between 32-64 characters long
empire_daemon_token_secret:

# Set to an empty string to disable sending empire daemon events to the
# application logstream (via kinesis)
empire_daemon_log_streamer: kinesis

# Where to send the empire daemon logs - sends to cloudwatch. Can also be
# set to 'stdout' if you only want to send it to stdout on each controller
empire_daemon_run_logs_backend: cloudwatch

# If empire_daemon_run_logs_backend is set to cloudwatch, you can set this
# to the name of an existing cloudwatch log group to send the logs there. If
# an empty string, a new cloudwatch log group will be created for you
empire_daemon_run_logs_cloudwatch_group: !!str

# Set to SNS if you want to send all empire daemon events into an SNS topic
empire_daemon_events_backend: stdout

# If empire_daemon_events_backend is set to SNS, set this if you want to use
# an existing SNS topic. If not provided, an SNS topic will be created for you
empire_daemon_events_sns_topic_name: !!str

# Set to true to enable debug logging from the AWS SDK library
empire_daemon_aws_debug: false

# Set to true to require commit messages for certain commands:
# run, set, restart, deploy, etc
empire_daemon_require_commit_messages: false

# The scheduler to use in Empire
empire_daemon_scheduler: cloudformation-migration
