vpc_variables: &vpc_variables
  VpcId: ${output vpc::VpcId}
  DefaultSG: ${output vpc::DefaultSG}
  PublicSubnets: ${output vpc::PublicSubnets}
  PrivateSubnets: ${output vpc::PrivateSubnets}
  AvailabilityZones: ${output vpc::AvailabilityZones}

stacks:
  - name: vpc
    class_path: stacker_blueprints.vpc.VPC
    variables:
      # AZCount is the # of AvailabilityZones to attempt to build in. You
      # should build in as many as you can afford in order to provide for
      # better fault tolerance. Note: Since this is all done in a VPC, you
      # need to find out how many AZs can handle VPC subnets for the
      # region you are building in. As of this writing, here are the max
      # allowed AZCount's for each zone:
      #     us-east-1: 4, us-west-1: 2, us-west-2: 3, eu-west-1: 3
      # Note: The minimum allowed AZCount is 2.
      AZCount: ${azcount}
      # Enough subnets for 4 AZs
      PublicSubnets:
        - 10.128.0.0/24
        - 10.128.1.0/24
        - 10.128.2.0/24
        - 10.128.3.0/24
      PrivateSubnets:
        - 10.128.8.0/22
        - 10.128.12.0/22
        - 10.128.16.0/22
        - 10.128.20.0/22
      InternalDomain: internal
      # CidrBlock needs to be hold all of the Public & Private subnets above
      CidrBlock: 10.128.0.0/16
      UseNatGateway: true
  - name: mysqlMaster
    class_path: stacker_blueprints.rds.mysql.MasterInstance
    variables:
      << : *vpc_variables
      Subnets: ${output vpc::PrivateSubnets}
      InstanceType: ${master_db_instance_type}
      AllowMajorVersionUpgrade: ${master_allow_major_version_upgrade}
      AutoMinorVersionUpgrade: ${master_auto_minor_version_upgrade}
      AllocatedStorage: ${master_storage_size}
      IOPS: ${master_iops}
      InternalZoneName: ${output vpc::InternalZoneName}
      InternalZoneId: ${output vpc::InternalZoneId}
      InternalHostname: ${master_name}
      DBInstanceIdentifier: ${master_name}
      DBFamily: ${master_db_family}
      EngineVersion: ${master_engine_version}
      EngineMajorVersion: ${master_engine_major_version}
      StorageEncrypted: ${master_storage_encrypted}
      # MasterInstance specific
      MasterUser: ${master_db_user}
      MasterUserPassword: ${master_db_passwd}
      DatabaseName: ${master_db_name}
      MultiAZ: ${master_multi_az}
  - name: mysqlReplica
    class_path: stacker_blueprints.rds.mysql.ReadReplica
    variables:
      << : *vpc_variables
      Subnets: ${output vpc::PrivateSubnets}
      InstanceType: ${replica_db_instance_type}
      AllowMajorVersionUpgrade: ${replica_allow_major_version_upgrade}
      AutoMinorVersionUpgrade: ${replica_auto_minor_version_upgrade}
      AllocatedStorage: ${replica_storage_size}
      IOPS: ${replica_iops}
      InternalZoneName: ${output vpc::InternalZoneName}
      InternalZoneId: ${output vpc::InternalZoneId}
      InternalHostname: ${replica_name}
      DBInstanceIdentifier: ${replica_name}
      DBFamily: ${replica_db_family}
      EngineVersion: ${replica_engine_version}
      EngineMajorVersion: ${replica_engine_major_version}
      StorageEncrypted: ${replica_replica_storage_encrypted}
      # ReadReplica Specific
      MasterDatabaseId: ${output postgresMaster::DBInstance}
